syntax = "proto3";
package rti.amanzi.protobuf;
option java_package = "org.rti.amanzi.protobuf";
option java_multiple_files = true;
// `Struct` represents a structured data value, consisting of fields
// which map to dynamically typed values. In some languages, `Struct`
// might be supported by a native representation. For example, in
// scripting languages like JS a struct is represented as an
// object. The details of that representation are described together
// with the proto support for the language.
//
// The JSON representation for `Struct` is JSON object.
message Struct {
  // Unordered map of dynamically typed values.
  map<string, Value> fields = 1;
}

message NumberValue {
    oneof kind {
        double double_value = 1;
        float float_value = 2;
        int64 int64_value = 3;
        int32 int32_value = 4;
        uint64 uint64_value = 5;
        uint32 unit32_value = 6;
        NullValue null_value = 7;
    }
}
// `Value` represents a dynamically typed value which can be either
// null, a number, a string, a boolean, a recursive struct value, or a
// list of values. A producer of value is expected to set one of that
// variants, absence of any variant indicates an error.
//
// The JSON representation for `Value` is JSON value.
message Value {
  // The kind of value.
  oneof kind {
    // Represents a null value.
    NullValue null_value = 1;
    // Represents a double value.
    double number_value = 2;
    // Represents a string value.
    string string_value = 3;
    // Represents a boolean value.
    bool bool_value = 4;
    // Represents a structured value.
    Struct struct_value = 5;
    // Represents a repeated `Value`.
    ListValue list_value = 6;
  }
}

// `NullValue` is a singleton enumeration to represent the null value for the
// `Value` type union.
//
//  The JSON representation for `NullValue` is JSON `null`.
enum NullValue {
  // Null value.
  NULL_VALUE = 0;
}

// `ListValue` is a wrapper around a repeated field of values.
//
// The JSON representation for `ListValue` is JSON array.
message ListValue {
  // Repeated field of dynamically typed values.
  repeated Value values = 1;
}

message Timestamp {

  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  int64 seconds = 1;

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  int32 nanos = 2;
}

// A Source object holds spatial and origin meta data associated with the timeseries
message Source {
    string name = 1;
    string code = 2;
}

message Elevation {
    double value = 1;
    string units = 2;
    string datum = 3;
}

message SourceLocation {
    string name = 1;
    string code = 2;
    Elevation elevation =3;
}

message Parameter {
    string name = 1;
    string code = 2;
    string units = 3;
}

message TimeInfo {
    Timestamp referenceTime = 1;
    Timestamp start = 2;
    Timestamp end = 3;
    string interval = 4;
}

message Origin {
    Timestamp modifiedOn = 1;
    string description = 2;
    repeated string referenceIds =3;
}

message Group {
    string groupId = 1;
    string description =2;
}

message TimeSeriesMetaInfo {
    string id = 1;
    string name = 2;
    string code = 3;
    string type = 4;
    Struct properties = 5;
    repeated Group groups = 6;
    Source source = 7;
    SourceLocation sourceLocation = 8;
    Parameter parameter = 9;
    TimeInfo timeInfo = 10;
    Origin origin = 11;
}

message TimeRecord {
    Timestamp datetime = 1;
    NumberValue value = 2;
    repeated string qualifiers =3;
    Struct properties = 4;
}

message TimeSeries {
     // a meta object describing the timeseries
    TimeSeriesMetaInfo metaInfo = 3;
    // the time , value records of the timeseries
    repeated TimeRecord data = 4;
}


